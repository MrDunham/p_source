// ===========================================================

//  Author: Patrick Siren ( @patsiren )
//  Document: DRY Mixins for dynamic styling

//  Based on "Drying Out Your Sass Mixins by @snugug 
//  => http://alistapart.com/article/dry-ing-out-your-sass-mixins

// ===========================================================


// Sections ===================================

// Default: .purple-dark
@mixin section ( $bg_color: $purple_dark, $text_color: $silver, $h_color: $purp_mid, $i_color: $purple_mid ) {
  @include section-static;

  background-color: $bg_color;
  color: $text_color;

  
  header { color: $h_color }
  .content { 
    padding-top: 1.3888889%; } //= 20 / 1440
  
  .i { color: $i_color }
}


@mixin section-static($extend: true) {
  $selector: map-get($Placeholder, 'section');

  @if $extend == true {
    @if $selector == null {
      $selector: unique_id();
      $Placeholder: map-merge($Placeholder, ('section': $selector)) !global;

      @at-root %#{$selector} { @include section-static( false ); }
    }
    
  @extend %#{$selector};

  }

  @else {
    display:block;
    padding: 0 0 3.75%; //= 54 / 1440
    width:100%;
    
    
    } 
  }


// Buttons =====================================


@mixin button ( $color_primary: $action_orange, $color_secondary: white ) {
  @include button-static;

  color: $color_secondary;
  background-color: $color_primary;
  border: 4px solid $color_primary;
  &:hover { color: $color_primary; }

}

// Static button Styles

@mixin button-static($extend: true) {
  $selector: map-get($Placeholder, 'button');

  @if $extend == true {
    @if $selector == null {
      $selector: unique_id();
      $Placeholder: map-merge($Placeholder, ('button': $selector)) !global;

      @at-root %#{$selector} { @include button-static( false ); }
    }
    
  @extend %#{$selector};

  }

  @else {

    display: block;
    position: relative;
    font-size: 0.875em; // = 14px / 16px
    border-radius: 6px;
    text-decoration: none;
    // letter-spacing: 0.083333333em;
    
    outline: none;
    cursor: pointer;

    @include transition(all, 0.2s, linear);
    
    &:hover { background:transparent; }

  }
}



// Placeholder Engine

@mixin placeholder($key, $extend: true) {
  $selector: map-get($Placeholder, $key);

  @if $selector == null {
    $selector: unique_id();
    $Placeholder: map-merge($Placeholder, ($key: $selector)) !global;

    @at-root %#{$selector} {
      @include placeholder( $selector, false );
    }
  }
    
  @extend %#{$selector}
}